{
	"folder_history":
	[
	],
	"last_version": 3143,
	"last_window_id": 1,
	"log_indexing": false,
	"settings":
	{
	},
	"windows":
	[
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"exi",
						"exitOuterLoop"
					],
					[
						"prin",
						"printLoopRepeater"
					],
					[
						"loop",
						"loopPolyvalRepeater"
					],
					[
						"clos",
						"closeEnoughEnd"
					],
					[
						"loo",
						"loopThreeRepeater"
					],
					[
						"exit",
						"exitLoopThree"
					],
					[
						"max",
						"max_updates"
					],
					[
						"update",
						"update_count"
					],
					[
						"ex",
						"exitNotEnoughtUpdates"
					],
					[
						"Pol",
						"POLY_DEGREE"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/home/b/Source/369/encm369w18lab01/exH/exH.c",
					"settings":
					{
						"buffer_size": 1021,
						"line_ending": "Unix"
					}
				},
				{
					"contents": "// exH.c\n// ENCM 369 Winter 2018 Lab 1 Exercise H\n\n#include <stdio.h>\n\nvoid print_array(const char *str, const int *a, int n);\n// Prints the string given by str on stdout, then\n// prints a[0], a[1], ..., a[n - 1] on stdout on a single line.\n\nvoid sort_array(int *a, int n);\n// Sorts a[0], a[1], ..., a[n - 1] from smallest to largest.\n\nint main(void)\n{\n  int test_array[] = {440, 220, 330, 550, 330, 660, 110, 330, 440};\n\n  print_array(\"before sorting ...\", test_array, 9);\n  sort_array(test_array, 9);\n  print_array(\"after sorting ...\", test_array, 9);\n  return 0;\n}\n\nvoid print_array(const char *str, const int *a, int n)\n{\n  int i = 0;\n  puts(str);\n  printLoopRepeater: if (i >= n) goto exitPrintLoop;\n    printf(\"    %d\", a[i]);\n    i++;\n    goto printLoopRepeater;\n  exitPrintLoop:;\n  printf(\"\\n\");\n}\n\nvoid sort_array(int *a, int n)\n{\n  int i = 1, j, element_i;\n  outerLoopRepeater: if (i >= n) goto exitOuterLoop;\n    element_i = a[i];\n    j = i;\n\n    innerLoopRepeater: if (j <= 0) goto exitInnerLoop;\n    if (a[j-1] <= element_i) goto exitInnerLoop;\n      a[j] = a[j - 1];\n      j--;\n      goto innerLoopRepeater;\n    exitInnerLoop:;\n    a[j] = element_i;\n    i++;\n    goto outerLoopRepeater;\n  exitOuterLoop:;\n}\n",
					"file": "/home/b/Source/369/encm369w18lab01/exH/gotoCH.c",
					"file_size": 1292,
					"file_write_time": 131608681456609266,
					"settings":
					{
						"buffer_size": 1221,
						"encoding": "UTF-8",
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"console":
			{
				"height": 0.0,
				"history":
				[
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/home/b/Source/369/encm369w18lab01/exG/exG.c",
				"/home/b/Source/369/encm369w18lab01/exG/gotoCG.c",
				"/home/b/Source/369/encm369w18lab01/exD/temperature.c",
				"/home/b/Source/369/encm369w18lab01/exB/globals.c"
			],
			"find":
			{
				"height": 0.0
			},
			"find_in_files":
			{
				"height": 0.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"groups":
			[
				{
					"selected": 1,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/home/b/Source/369/encm369w18lab01/exH/exH.c",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 1021,
								"regions":
								{
								},
								"selection":
								[
									[
										1021,
										1021
									]
								],
								"settings":
								{
									"syntax": "Packages/C++/C.sublime-syntax",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						},
						{
							"buffer": 1,
							"file": "/home/b/Source/369/encm369w18lab01/exH/gotoCH.c",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 1221,
								"regions":
								{
								},
								"selection":
								[
									[
										1221,
										0
									]
								],
								"settings":
								{
									"syntax": "Packages/C++/C.sublime-syntax",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 0.0
			},
			"input":
			{
				"height": 0.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0,0,0,0,0,800,0,1594,868,1600,900",
			"project": "",
			"replace":
			{
				"height": 0.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 150.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 1,
			"workspace_name": ""
		}
	],
	"workspaces":
	{
		"recent_workspaces":
		[
		]
	}
}
